/**
 * c-ico.css
 * @version 1.0.40
 * @summary 14-01-2020
 * @author Mads Stoumann
 * @description Stylesheet for icons
	Variables are concatinated from: 
	- element-prefix + 
	- optional sub-element +
	- emmet-css-abbreviation + 
	- modifier (:active, :disabled, :focus, :hover)
	More on emmett: https://docs.emmet.io/cheat-sheet/
*/
@import 'config.css';

/* Common Icon-styles */
.c-ico,
.c-ico-bga::after,
.c-ico-bgb::before,
.c-ico-bgi,
.c-ico-bgm,
.c-ico-mai,
.c-ico-maa::after,
.c-ico-mab::before
 {
	--ico-as: center;
	--ico-d: inline-block;
	--ico-fill: currentColor;
	--ico-h: 1em;
	--ico-l: initial;
	--ico-lh: inherit;
	--ico-m: 0;
	--ico-pie: 0px;
	--ico-pis: 0px;
	--ico-pos: initial;
	--ico-r: initial;
	--ico-trf: none;
	--ico-w: 1em;

	align-self: var(--ico-as);
	display: var(--ico-d);
	height: var(--ico-w);
	left: var(--ico-l);
	line-height: var(--ico-lh);
	margin: var(--ico-m);
	padding-inline-start: var(--ico-pis);
	padding-inline-end: var(--ico-pie);
	pointer-events: none;
	position: var(--ico-pos);
	right: var(--ico-r);
	transform: var(--ico-trf);
	width: var(--ico-w);
}

/* Icon as inline markup or `<use>`*/
.c-ico {
	fill: var(--ico-fill);
}

/* Icon as `background-image` */
.c-ico-bgi { /* Center within container */
	background: no-repeat center/	var(--ico-w) var(--ico-h) var(--ico-bgi);
}
.c-ico-bga::after { /* Right align */
	background: no-repeat right center/	var(--ico-w) var(--ico-h) var(--ico-bgi);
}
.c-ico-bgb::before { /* Left align */
	background: no-repeat left center/	var(--ico-w) var(--ico-h) var(--ico-bgi);
}
/* Icon as pseudo-element ::after or ::before */
.c-ico-bga::after,
.c-ico-bgb::before {
	content: "";
}

/* Icon as multiple `background-image` for `<self-closing />`-tags: left and right icons */
.c-ico-bgm {
	--ico-lh: 1;
	--ico-bgr: var(--i-empty);
	background-image: var(--ico-bgi), var(--ico-bgr);
	background-position: var(--ico-pis) center, right var(--ico-pis) center;
	background-repeat: no-repeat;
	background-size: var(--ico-w) var(--ico-h);
	padding-inline-start: calc(var(--ico-w) + (var(--ico-pie) + var(--ico-pis)));
	padding-inline-end: calc(var(--ico-w) + (var(--ico-pie) + var(--ico-pis)));
	width: auto;
}
/* Switch left and right `background-image` when `right-to-left` */
[dir="rtl"] .c-ico__bgm {
	background-image: var(--ico-bgr), var(--ico-bgi);
}

/* Icon as `mask-image` */
.c-ico-mai { /* Center within container */
	mask: no-repeat center/var(--ico-w) var(--ico-bgi);
	-webkit-mask: no-repeat center/var(--ico-w) var(--ico-bgi);
}
/* Icon as `mask-image` ::after */
.c-ico-maa::after { /* Right-align within container */
	mask: no-repeat right center/var(--ico-w) var(--ico-bgi);
	-webkit-mask: no-repeat right center/var(--ico-w) var(--ico-bgi);
}
/* Icon as `mask-image` ::before */
.c-ico-mab::before { /* Left-align within container */
	mask: no-repeat left center/var(--ico-w) var(--ico-bgi);
	-webkit-mask: no-repeat left center/var(--ico-w) var(--ico-bgi);
}
.c-ico-mai,
.c-ico-maa::after,
.c-ico-mab::before {
	--ico-bgc: currentColor;
	background-color: var(--ico-bgc);
}
.c-ico-maa::after,
.c-ico-mab::before {
	content: "";
}

/* Modifiers */
.c-ico--hor-flip {
	--ico-trf: scaleY(-1);
}
.c-ico--ver-flip,
[dir="rtl"] .c-ico--rtl {
	--ico-trf: scaleX(-1);
}

/* Modifiers: Icon Variables */
.c-ico--arr_dwn { --ico-bgi: var(--i-arr_dwn); }
.c-ico--arr_dwn-bgr { --ico-bgr: var(--i-arr_dwn); }

.c-ico--arr_rgt { --ico-bgi: var(--i-arr_rgt); }
.c-ico--arr_rgt-bgr { --ico-bgr: var(--i-arr_rgt); }

.c-ico--check { --ico-bgi: var(--i-check); }
.c-ico--check-rgt { --ico-bgr: var(--i-check); }

.c-ico--download { --ico-bgi: var(--i-download); }
.c-ico--download-rgt { --ico-bgr: var(--i-download); }

.c-ico--empty { --ico-bgi: var(--i-empty); }

.c-ico--error { --ico-bgi: var(--i-error); }
.c-ico--error-rgt { --ico-bgr: var(--i-error); }

.c-ico--phone { --ico-bgi: var(--i-phone); }
.c-ico--phone-rgt { --ico-bgr: var(--i-phone); }

.c-ico--star { --ico-bgi: var(--i-star); }
.c-ico--star-rgt { --ico-bgr: var(--i-star); }